// Fast demo config, used mainly for validating that an installation worked and that code
// changes don't crash.
// Run with:
//   python main.py --config_file config/demo.conf
//
// Use this as a template to make your own configs, and see defaults.conf for a
// comprehensive list of supported parameters.

// This file uses HOCON, which is a JSON/YAML-like format that supports
// includes, references, and object merging semantics; see
// https://github.com/lightbend/config/blob/master/HOCON.md for reference.

// This imports the defaults, which can be overridden below.
include "defaults.conf"  // relative path to this file

// write to local storage by default for this demo
project_dir = ${JIANT_PROJECT_PREFIX}
exp_name = jiant-demo
run_name = mtl-sst-mrpc
global_ro_exp_dir = /nfs/jsalt/share/exp/demo

cuda = 0
random_seed = 42

load_model = 0
reload_tasks = 0
reload_indexing = 0
reload_vocab = 0

train_tasks = "sst,mrpc"
eval_tasks = "sts-b,wnli"
do_train = 1
do_eval = 1
train_for_eval = 1
classifier = mlp
classifier_hid_dim = 32
max_seq_len = 10
max_word_v_size = 5000

word_embs = none
char_embs = 0
d_word = 300
elmo = 1
elmo_chars_only = 1

sent_enc = rnn
bidirectional = 1
d_hid = 128
pair_attn = 1
shared_pair_attn = 0
n_layers_enc = 1
skip_embs = 1

batch_size = 8

bpp_base = 1
val_interval = 100
max_vals = 10
eval_val_interval = 10
eval_max_vals = 10
weighting_method = uniform
scaling_method = uniform

// Use += to inherit from any previously-defined task tuples.
sts-b += {
    classifier_hid_dim = 512
    classifier_dropout = 0.3
    pair_attn = 0
    max_vals = 16
    val_interval = 100
}

mrpc += {
    classifier_hid_dim = 256
    classifier_dropout = 0.1
    max_vals = 8
    val_interval = 1
}
